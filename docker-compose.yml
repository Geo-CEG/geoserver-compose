version: '3.7'
services:
  db:
    container_name: geoserver-db
    env_file: .env
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_PASSWORD: ${DB_ADMIN_PASSWORD}
    networks:
      - postgis
    # Exposing the port makes working from the host via psql easier.
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.postgis

  db-backups:
    container_name: geoserver-db-backup
    image: kartoza/pg-backup:11.0
    env_file: .env
    environment:
      PGUSER: postgres
      PGPASSWORD: ${DB_ADMIN_PASSWORD}
      PGHOST: db
    networks:
      - postgis
    volumes:
      - db_backups:/backups
    restart: unless-stopped

  geoserver:
    container_name: geoserver
    image: geoserver
    build:
      dockerfile: Dockerfile.geoserver
      context: .
      args:
        GEOSERVER_VERSION: 2.21.1
        GEOSERVER_BASE_VERSION: 2.21
        GEOWEBCACHE_VERSION: 1.21.1
        GEOSERVER_DATA_DIR: /usr/local/tomcat/geoserver
        APACHE_COMMONS_COMPRESS_VERSION: 1.21
    env_file: .env
    environment:
      ENABLE_JSONP: "true"
    networks:
      - proxy
      - postgis
    expose:
      - "8080"
    ports:
      - "8080:8080"
    volumes:
      - geoserver_data:/usr/local/tomcat/geoserver
    restart: unless-stopped

   
  web-server:
    container_name: geoserver-web
    image: nginx:alpine
    networks:
      - proxy
    env_file: .env
    expose:
      - "80"
    volumes:
      # I am binding this to a filesystem on the host
      # for now to make updating content easier.
      - /var/www/maps/html:/usr/share/nginx/html
    restart: unless-stopped
 
  pgadmin:
    container_name: geoserver-pgadmin
    env_file: .env
    # dpage/pgadmin4 is the official release
    image: dpage/pgadmin4:4.13
    networks:
      - proxy
      - postgis
# Use this when running behind reverse proxy      
    expose:
      - "80"
# Only open this up for test, "expose" + proxy is the normal setup.
#    ports:
#      - "80:80"
    volumes:
      # Session data, user files, config files, config database go here.
      - geoserver_pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      # Added SCRIPT_NAME to solve this problem: https://stackoverflow.com/questions/46381668/pgadmin4-wont-work-in-specific-location-behind-nginx
#      SCRIPT_NAME: /pgadmin4

volumes:
  db_data:
    name: geoserver_postgis_data

  db_backups:
    name: geoserver_postgis_backups

  geoserver_data:
    name: geoserver_data

  geoserver_pgadmin:
    name: geoserver_pgadmin

networks:
  # This is a network we share with our reverse proxy
  proxy:
    name: proxy
    # Won't be created or destroyed with docker-compose up|down
    external: true

  # This network is only used for database access
  postgis:
    name: postgis
